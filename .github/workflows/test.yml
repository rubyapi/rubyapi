name: Test

on:
  push:
    branches:
      - main
      - colby/next
    paths-ignore:
      - "**.md"
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - "**.md"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Ruby linting
        run: bin/rubocop

  test-import:
    runs-on: ubuntu-latest
    services:
      search:
        image: opensearchproject/opensearch:2.11.0
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
          "plugins.security.disabled": "true"
        options: >-
          --health-cmd "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      database:
        image: postgres:17.4
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd "pg_isready -U postgres -d postgres -h localhost -p 5432 || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v4

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Rails Application
        env:
          OPENSEARCH_URL: "http://search:9200"
          DB_HOST: database
        run: bin/setup --skip-server

      - name: Test Importing Ruby Documentation
        env:
          OPENSEARCH_URL: "http://search:9200"
          DB_HOST: database
        run: bin/rails import:ruby

  test:
    runs-on: ubuntu-latest
    services:
      search:
        image: opensearchproject/opensearch:2.11.0
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
          "plugins.security.disabled": "true"
        options: >-
          --health-cmd "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      database:
        image: postgres:17.4
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd "pg_isready -U postgres -d postgres -h localhost -p 5432 || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v4

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Rails Application
        env:
          OPENSEARCH_URL: "http://search:9200"
          DB_HOST: database
        run: bin/setup --skip-server

      - name: Run Tests
        env:
          OPENSEARCH_URL: "http://search:9200"
          DB_HOST: database
        run: bin/rails test

  test-system:
    runs-on: ubuntu-latest
    services:
      search:
        image: opensearchproject/opensearch:2.11.0
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
          "plugins.security.disabled": "true"
        options: >-
          --health-cmd "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v4

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Rails Application
        run: bin/setup --skip-server

      - name: Run Tests
        run: bin/rails test:system
