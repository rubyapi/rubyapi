# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: rubyapi_development
  username: rubyapi
  password: rubyapi_password
  host: localhost
  port: 5432

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: rubyapi_test
  username: rubyapi
  password: rubyapi_password
  host: localhost
  port: 5432

production:
  <<: *default
  database: rubyapi_production
  username: rubyapi
  password: <%= ENV["DATABASE_PASSWORD"] %>
  host: <%= ENV["DATABASE_HOST"] %>
  port: <%= ENV["DATABASE_PORT"] || 5432 %>

# SQLite configuration (kept for reference)
# You can switch back to SQLite by changing the adapter and database settings
#
# sqlite_default: &sqlite_default
#   adapter: sqlite3
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#   timeout: 5000
#
# sqlite_development:
#   <<: *sqlite_default
#   database: storage/development.sqlite3
#
# sqlite_test:
#   <<: *sqlite_default
#   database: storage/test.sqlite3
#
# sqlite_production:
#   <<: *sqlite_default
#   database: storage/production.sqlite3